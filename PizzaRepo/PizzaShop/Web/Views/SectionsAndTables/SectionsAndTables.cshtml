@model List<Entity.ViewModel.SectionViewModel>
@{
    Layout = "~/Views/Shared/_SecondLayout.cshtml";
    ViewData["Title"] = "Sections";
}


<div class="row my-4 px-3">
    <div class="col-6 text-Users-title fs-2">Sections/Tables</div>
</div>

<div class="row mx-2">
    <!-- Sections Column -->
    <div class="col-md-3">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <p class="fs-5 text-Users-title">Sections</p>
            <button class="send-button" data-bs-toggle="modal" data-bs-target="#addSectionModal">
                <i class="material-icons">add</i>
            </button>
        </div>

        <div class="list-group" id="sectionList">
            @foreach (var Section in Model)
            {
                <a href="#"
                    class="list-group-item list-group-item-action section-item @(Model.IndexOf(Section) == 0 ? "active" : "")"
                    data-section-id="@Section.Sectionid">
                    @Section.Sectionname
                    <span class="icon-container">
                        <i class="material-icons"
                            onclick="event.stopPropagation(); editSection(@Section.Sectionid)">edit</i>
                        <i class="material-icons"
                            onclick="event.stopPropagation(); deleteSection(@Section.Sectionid)">delete</i>
                    </span>
                </a>
            }
        </div>
    </div>

    <div class="col-md-9">
        <div class="row">
            <p class="col-2 text-Users-title font-weight-bold fs-5">Tables</p>

            <div class="d-flex col-10 mb-3 justify-content-end align-items-center">
                <div class="col-6"></div>
                <input type="text" class="form-control col mx-2 p-3" id="searchItem" placeholder="Search tables">

                <button class="col delete-user mx-2 p-3" data-bs-toggle="modal" data-bs-target="#massDeleteItems">
                    <img src="~/images/delete-icon.png" alt="" height="20px" width="20px">
                </button>

                <button class="add-user-button m-2 p-3" data-bs-toggle="modal" data-bs-target="#addTableModal">
                    + New Table
                </button>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table" id="SectionTable">
                <thead>
                    <tr>
                        <th scope="col"><input class="form-check-input" type="checkbox" value="" disabled></th>
                        <th scope="col" class="text-black-50">Name</th>
                        <th scope="col" class="text-black-50">Capacity</th>
                        <th scope="col" class="text-black-50">Status</th>
                        <th scope="col" class="text-black-50">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Tables will be dynamically loaded here -->
                </tbody>
            </table>
        </div>
        <!-- Pagination will be dynamically loaded here -->
    </div>
</div>

<!-- Add Section Modal -->
<div class="modal fade" id="addSectionModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Section</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addSectionForm">
                    <div class="mb-3 form-floating">
                        <input type="text" class="form-control" id="SectionName" required>
                        <label for="SectionName" class="form-label">Name*</label>
                    </div>
                    <div class="mb-3 form-floating">
                        <textarea class="form-control" id="SectionDescription" rows="3"></textarea>
                        <label for="SectionDescription" class="form-label">Description</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="send-button px-3 py-1" id="saveSection">Save</button>
                <button type="button" class="back-button px-3 py-1" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Section Modal -->
<div id="sectionDeleteModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete section</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="~/images/danger.png" width="50" height="50" alt="Warning">
                <p class="mt-3">Are you sure you want to delete this section?</p>
                <input type="hidden" id="sectionToDelete">
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="send-button px-3 py-1" id="confirmSectionDelete">Yes</button>
                <button type="button" class="back-button px-3 py-1" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Section Modal -->
<div class="modal fade" id="editSectionModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Section</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editSectionForm">
                    <input type="hidden" id="editSectionId">
                    <div class="mb-3 form-floating">
                        <input type="text" class="form-control" id="editSectionName" required>
                        <label for="editSectionName" class="form-label">Name</label>
                    </div>
                    <div class="mb-3 form-floating">
                        <textarea class="form-control" id="editSectionDescription" rows="3"></textarea>
                        <label for="editSectionDescription" class="form-label">Description</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="send-button px-3 py-1" id="updateSection">Save</button>
                <button type="button" class="back-button px-3 py-1" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Table Modal -->
<div class="modal fade" id="addTableModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Table</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addTableForm">
                    <input type="hidden" id="activeSectionId">
                    <div class="d-flex row">
                        <div class="mb-3 col-md-6 form-floating">
                            <input type="text" class="form-control" id="tableName" required>
                            <label for="tableName" class="form-label">Table Name*</label>
                        </div>
                        <div class="mb-3 col-md-6 form-floating">
                            <select class="form-select" id="sectionSelect" name="SectionId" required>
                                <option value="">Loading sections...</option>
                            </select>
                            <label for="sectionSelect" class="form-label">Section*</label>
                        </div>
                    </div>
                    <div class="row d-flex">
                        <div class="mb-3 col-md-6 form-floating">
                            <input type="number" class="form-control" id="tableCapacity" required min="1">
                            <label for="tableCapacity" class="form-label">Capacity*</label>
                        </div>
                        <div class="mb-3 col-md-6 form-floating">
                            <select class="form-select" id="tableStatus" name="TableId" required>
                                <option value="Available">Available</option>
                                <option value="Occupied">Occupied</option>
                                <option value="Reserved">Reserved</option>
                            </select>
                            <label for="tableStatus" class="form-label">Status*</label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="send-button px-3 py-1" id="saveTable">Save</button>
                <button type="button" class="back-button px-3 py-1" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const sectionDeleteModal = new bootstrap.Modal(document.getElementById('sectionDeleteModal'));

        document.addEventListener("DOMContentLoaded", function () {
            // Load tables when a section is clicked
            document.querySelectorAll('.section-item').forEach(item => {
                item.addEventListener('click', function (e) {
                    e.preventDefault();
                    // Remove active class from all sections
                    document.querySelectorAll('.section-item').forEach(i => i.classList.remove('active'));
                    // Add active class to clicked section
                    this.classList.add('active');
                    const sectionId = this.getAttribute('data-section-id');
                    document.getElementById('activeSectionId').value = sectionId;
                    loadTables(sectionId, 1);
                });
            });

            // Load tables for the first section by default if exists
            const firstSection = document.querySelector('.section-item.active');
            if (firstSection) {
                const sectionId = firstSection.getAttribute('data-section-id');
                document.getElementById('activeSectionId').value = sectionId;
                loadTables(sectionId, 1);
            }

            // Save section
            document.getElementById('saveSection').addEventListener('click', () => {
                const SectionName = document.getElementById('SectionName').value;
                const SectionDescription = document.getElementById('SectionDescription').value;

                fetch('/SectionsAndTables/AddSection', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        SectionName: SectionName,
                        description: SectionDescription
                    })
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Failed to add Section');
                        }
                    });
            });

            // Delete section
            document.getElementById('confirmSectionDelete').addEventListener('click', function () {
                const sectionId = document.getElementById('sectionToDelete').value;

                fetch(`/SectionsAndTables/DeleteSection?sectionid=${sectionId}`, {
                    method: 'POST'
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Failed to delete section');
                        }
                    })
                    .finally(() => {
                        sectionDeleteModal.hide();
                    });
            });

            // Update section
            document.getElementById('updateSection').addEventListener('click', () => {
                const sectionData = {
                    SectionId: document.getElementById('editSectionId').value,
                    Sectionname: document.getElementById('editSectionName').value,
                    Description: document.getElementById('editSectionDescription').value
                };

                fetch('/SectionsAndTables/UpdateSection', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(sectionData)
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Failed to update section');
                        }
                    });
            });

            // Search functionality
            document.getElementById('searchItem').addEventListener('input', function () {
                const searchTerm = this.value;
                const activeSection = document.querySelector('.section-item.active');
                if (activeSection) {
                    const sectionId = activeSection.getAttribute('data-section-id');
                    loadTables(sectionId, 1, searchTerm);
                }
            });
        });

        function deleteSection(sectionId) {
            document.getElementById('sectionToDelete').value = sectionId;
            sectionDeleteModal.show();
        }

        function editSection(sectionId) {
            fetch(`/SectionsAndTables/GetSection/${sectionId}`)
                .then(response => response.json())
                .then(section => {
                    document.getElementById('editSectionId').value = section.sectionid;
                    document.getElementById('editSectionName').value = section.sectionname;
                    document.getElementById('editSectionDescription').value = section.description;

                    const editModal = new bootstrap.Modal(document.getElementById('editSectionModal'));
                    editModal.show();
                });
        }

        function loadTables(sectionId, page, searchTerm = '', pageSize = 5) {
            fetch(`/SectionsAndTables/GetTablesBySection?sectionId=${sectionId}&page=${page}&pageSize=${pageSize}&searchTerm=${searchTerm}`)
                .then(response => response.json())
                .then(data => {
                    const tbody = document.querySelector('#SectionTable tbody');
                    tbody.innerHTML = '';

                    data.tables.forEach(table => {
                        const statusText = table.status ? 'Available' : 'Occupied';
                        const statusClass = table.status ? 'text-success' : 'text-danger';

                        const row = `
                                            <tr>
                                                <td><input class="form-check-input item-checkbox" type="checkbox" data-item-id="${table.tableid}"></td>
                                                <td class="align-middle">${table.tablename}</td>
                                                <td class="align-middle">${table.capacity}</td>
                                                <td class="align-middle ${statusClass}">${statusText}</td>
                                                <td class="align-middle">
                                                    <i class="material-icons cursor-pointer" onclick="editTable(${table.tableid})">edit</i>
                                                    <i class="material-icons cursor-pointer" onclick="deleteTable(${table.tableid})">delete</i>
                                                </td>
                                            </tr>
                                        `;
                        tbody.insertAdjacentHTML('beforeend', row);
                    });

                    // Update pagination controls
                    updatePaginationControls(data.totalItems, data.pageSize, data.currentPage, sectionId, searchTerm);
                });
        }

        function updatePaginationControls(totalItems, pageSize, currentPage, sectionId, searchTerm) {
            const totalPages = Math.ceil(totalItems / pageSize);
            let paginationContainer = document.querySelector('.pagination-container');

            if (!paginationContainer) {
                paginationContainer = document.createElement('div');
                paginationContainer.className = 'row mt-4 pagination-container justify-content-end';
                document.querySelector('.col-md-9').appendChild(paginationContainer);
            }

            paginationContainer.innerHTML = `
                                <div class="col-md-8 d-flex align-items-center justify-content-end">
                                    <div class="row mx-2">
                                        <select class="form-select page-size-select">
                                            <option value="5" ${pageSize == 5 ? 'selected' : ''}>5</option>
                                            <option value="10" ${pageSize == 10 ? 'selected' : ''}>10</option>
                                            <option value="15" ${pageSize == 15 ? 'selected' : ''}>15</option>
                                        </select>
                                    </div>
                                    <div>
                                        <span class="text-muted">
                                            Showing ${Math.min((currentPage - 1) * pageSize + 1, totalItems)} - ${Math.min(currentPage * pageSize, totalItems)} of ${totalItems}
                                        </span>
                                    </div>
                                    <div>
                                        ${currentPage > 1 ?
                    `<button class="btn btn-outline-primary mx-1 prev-page">
                                                <i class="fas fa-chevron-left"></i>
                                            </button>` :
                    `<span class="btn btn-outline-secondary mx-1 disabled"><i class="fas fa-chevron-left"></i></span>`}

                                        ${currentPage < totalPages ?
                    `<button class="btn btn-outline-primary mx-1 next-page">
                                                <i class="fas fa-chevron-right"></i>
                                            </button>` :
                    `<span class="btn btn-outline-secondary mx-1 disabled"><i class="fas fa-chevron-right"></i></span>`}
                                    </div>
                                </div>
                            `;

            // Add event listeners
            document.querySelector('.page-size-select').addEventListener('change', function () {
                const newPageSize = this.value;
                loadTables(sectionId, 1, searchTerm, newPageSize);
            });

            if (currentPage > 1) {
                document.querySelector('.prev-page').addEventListener('click', function () {
                    loadTables(sectionId, currentPage - 1, searchTerm, pageSize);
                });
            }

            if (currentPage < totalPages) {
                document.querySelector('.next-page').addEventListener('click', function () {
                    loadTables(sectionId, currentPage + 1, searchTerm, pageSize);
                });
            }
        }
        document.getElementById('addTableModal').addEventListener('shown.bs.modal', function () {
            loadSectionsInAddTable();
        });
        function loadSectionsInAddTable() {
            fetch('/SectionsAndTables/GetAllSections')
                .then(response => response.json())
                .then(sections => {
                    const select = document.getElementById('sectionSelect');
                    select.innerHTML = '';
                    sections.forEach(section => {
                        const option = new Option(section.sectionname, section.sectionid);
                        select.add(option);
                    });
                });
        }
        // Save table
            document.getElementById('saveTable').addEventListener('click', () => {
                const tableData = {
                    tablename: document.getElementById('tableName').value,
                    capacity: parseInt(document.getElementById('tableCapacity').value),
                    status: document.getElementById('tableStatus'),
                    sectionid: parseInt(document.getElementById('sectionSelect').value)
                };

                fetch('/SectionsAndTables/AddTable', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(tableData)
                })
                    .then(response => {
                        if (response.ok) {
                            const activeSection = document.querySelector('.section-item.active');
                            if (activeSection) {
                                const sectionId = activeSection.getAttribute('data-section-id');
                                loadTables(sectionId, 1);
                            }
                            $('#addTableModal').modal('hide');
                            document.getElementById('addTableForm').reset();
                        } else {
                            alert('Failed to add table');
                        }
                    });
            });

        function editTable(tableId) {

            console.log('Edit table:', tableId);
        }

        function deleteTable(tableId) {

            console.log('Delete table:', tableId);
        }
    </script>
}