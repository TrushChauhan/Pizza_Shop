@model List<Entity.ViewModel.OrderViewModel>
@{
    Layout = "~/Views/Shared/_SecondLayout.cshtml";
    ViewData["Title"] = "Customer";
}

<div class="row-11 d-flex">
    <div class="text-Users-title my-3 mx-2 fs-2 col-3">
        Customers
    </div>
    <div class="d-flex col-9 p-0">
        <div class="row w-100 p-0 d-flex justify-content-end">

            <input type="text" class="my-3 mx-2 col-3" id="search" placeholder="Search">
            <select class="my-3 mx-2 form-floating col-3" id="orderTime" required>
                <option value="All time">All time</option>
                <option value="Last 7 days">Last 7 days</option>
                <option value="Last 30 days">Last 30 days</option>
                <option value="Current Month">Current Month</option>
                <option value="Custom Date">Custom Date</option>
            </select>
            <button class="col-1 my-3 mx-2 p-2 send-button export-button w-auto">
                <div class="row d-flex">
                    <i class=" fa-solid fa-file-export col-1 my-2"></i>
                    <p class="col-1 my-1">Export</p>
                </div>
            </button>
        </div>
    </div>
</div>
<div class="table-responsive table-shadow row m-2">
    <table class="table ">
        <thead>
            <tr>
                <th scope="col" class="text-black-50">Name<i
                        class="fa-solid material-icons fa-arrow-up p-1 sort-asc"></i><i
                        class="fa-solid material-icons fa-arrow-down sort-desc"></i></th>
                <th scope="col" class="text-black-50">Email</th>
                <th scope="col" class="text-black-50">Phone Number</th>
                <th scope="col" class="text-black-50">Date<i
                        class="fa-solid fa-arrow-up material-icons p-1 sort-asc"></i><i
                        class="fa-solid material-icons fa-arrow-down sort-desc"></i></th>
                <th scope="col" class="text-black-50">Total Order<i
                        class="fa-solid fa-arrow-up p-1 material-icons sort-asc"></i><i
                        class="fa-solid fa-arrow-down material-icons sort-desc"></i></th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
    <div class="row mt-4 pagination-container justify-content-end">
        <div class="col-md-8 d-flex align-items-center justify-content-end">
            <div class="row mx-2">
                <select class="form-select page-size-select">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                </select>
            </div>
            <div>
                <span class="text-muted showing-info">
                    Showing 0 - 0 of 0
                </span>
            </div>
            <div>
                <button class="btn btn-outline-primary mx-1 prev-page" disabled>
                    <i class="fas fa-chevron-left"></i>
                </button>
                <button class="btn btn-outline-primary mx-1 next-page" disabled>
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>
<div id="dateModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Date Range</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="row modal-body text-center d-flex ">
                <div class="form-floating col-6 ">
                    <input type="date" id="startDate" class=" form-control">
                    <label for="startDate">Start Date</label>
                </div>
                <div class="form-floating col-6 ">
                    <input type="date" id="endDate" class="form-control">
                    <label for="endDate">End Date</label>
                </div>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="send-button px-3 py-1" id="confirmDateSelection">Submit</button>
                <button type="button" class="back-button px-3 py-1" id="cancelDateSelection">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        let currentPage = 1;
        let pageSize = parseInt($('.page-size-select').val());
        let sortField = '';
        let sortAscending = true;
        let totalCount = 0;
        let dateSelected = false;

        const searchInput = $('#search');
        const orderTimeSelect = $('#orderTime');
        const fromDateInput = $('#startDate');
        const toDateInput = $('#endDate');
        const exportButton = $('.export-button');
        const prevPageButton = $('.prev-page');
        const nextPageButton = $('.next-page');
        const pageSizeSelect = $('.page-size-select');
        const showingInfo = $('.showing-info');
        const tbody = $('tbody');
        const dateModal = $('#dateModal');

        // Initial load
        loadCustomers();

        // Event listeners
        searchInput.on('input', loadCustomers);
        $("#orderTime").bind("click", function () {
            if (this.value == "Custom Date" && !dateSelected) {
                $('#dateModal').modal('show');
                dateSelected = true;
            }
            else {
                dateSelected = false;
                loadCustomers();
            }
        }).change();
        $('#confirmDateSelection').on('click', function () {
            dateSelected = true;
            dateModal.modal('hide');
            loadCustomers();
        });
        $('#cancelDateSelection').on('click', function () {
            dateSelected = true;
            dateModal.modal('hide');
            loadCustomers();
        });
        pageSizeSelect.on('change', function () {
            pageSize = parseInt($(this).val());
            currentPage = 1;
            loadCustomers();
        });

        prevPageButton.on('click', function () {
            if (currentPage > 1) {
                currentPage--;
                loadCustomers();
            }
        });

        nextPageButton.on('click', function () {
            const totalPages = Math.ceil(totalCount / pageSize);
            if (currentPage < totalPages) {
                currentPage++;
                loadCustomers();
            }
        });

        // Sorting
        $('th').each(function () {
            const th = $(this);
            const arrows = th.find('i');
            if (arrows.length > 0) {
                arrows.on('click', function () {
                    const field = th.text().trim().replace(/↑|↓/g, '').trim();
                    const isAsc = $(this).hasClass('fa-arrow-up');

                    sortField = field;
                    sortAscending = isAsc;
                    currentPage = 1;

                    loadCustomers();
                });
            }
        });

        // Export
        exportButton.on('click', function () {
            const filters = getFilters();
            const queryString = $.param(filters);
            window.location.href = `/Customer/Export?${queryString}`;
        });

        function loadCustomers() {
            const filters = getFilters();

            $.ajax({
                url: '/Customer/GetCustomers',
                type: 'GET',
                data: filters,
                success: function (response) {
                    tbody.empty();
                    response.data.forEach(customer => {
                        const row = `
                        <tr>
                            <td>${customer.name}</td>
                            <td>${customer.email}</td>
                            <td>${customer.phoneNumber}</td>
                            <td>${new Date(customer.date).toLocaleDateString()}</td>
                            <td>${customer.totalOrders}</td>
                        </tr>
                    `;
                        tbody.append(row);
                    });

                    totalCount = response.totalCount;
                    updatePagination();
                },
                error: function (error) {
                    console.error('Error loading customers:', error);
                }
            });
        }

        function getFilters() {
            return {
                searchTerm: searchInput.val(),
                timePeriod: orderTimeSelect.val(),
                fromDate: dateSelected ? fromDateInput.val() : null,
                toDate: dateSelected ? toDateInput.val() : null,
                sortField: sortField,
                sortAscending: sortAscending,
                pageNumber: currentPage,
                pageSize: pageSize
            };
        }

        function updatePagination() {
            const totalPages = Math.ceil(totalCount / pageSize);
            const startItem = totalCount === 0 ? 0 : (currentPage - 1) * pageSize + 1;
            const endItem = Math.min(currentPage * pageSize, totalCount);
            showingInfo.text(`Showing ${startItem} - ${endItem} of ${totalCount}`);

            prevPageButton.prop('disabled', currentPage === 1);
            nextPageButton.prop('disabled', currentPage === totalPages || totalPages === 0);
        }
    });

</script>
